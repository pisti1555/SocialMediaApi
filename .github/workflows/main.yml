name: Main workflow

on:
  pull_request: 
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # Build, test and set version
  build-test-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versioning.outputs.VERSION }}
      
    env:
      DOTNET_ENVIRONMENT: Development
      ConnectionStrings__Database: "Host=postgres;Port=5432;Database=social_media;Username=postgres;Password=postgres"
      ConnectionStrings__Redis: "Host=redis;Port=6379"

    services:
      postgres:
        image: postgres:17.6
        env:
          POSTGRES_DB: social_media
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:8.2.1
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore SocialMediaApi.sln

      - name: Build
        run: dotnet build SocialMediaApi.sln --no-restore -c Release
        
      - name: Run tests
        run: dotnet test -c Release --no-restore --verbosity normal

      - name: Versioning
        id: versioning
        run: |
          version_prefix=$(grep -oPm1 "(?<=<VersionPrefix>)[^<]+" src/API/API.csproj)
          version="$version_prefix.${{ github.run_number }}"
          echo "VERSION=$version" >> $GITHUB_OUTPUT
        
  # Build and push docker image
  docker:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - build-test-version
    permissions:
      contents: read
      packages: write
      
    env:
      DOTNET_ENVIRONMENT: Production
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.actor }}/socialmedia-api
          VERSION=${{ needs.build-test-version.outputs.version }}

          docker build -t $IMAGE_NAME:$VERSION -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest